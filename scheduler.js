// scheduler.js
const cron = require('node-cron');
const bot = require('./botInstance');
const { readDb } = require('./database');

const startScheduler = () => {
    // –ó–∞–ø—É—Å–∫–∞–µ–º –∑–∞–¥–∞—á—É –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ 9:00 —É—Ç—Ä–∞ –ø–æ –º–æ—Å–∫–æ–≤—Å–∫–æ–º—É –≤—Ä–µ–º–µ–Ω–∏
    cron.schedule('0 9 * * *', () => {
        console.log('–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞—Ä—Ç–æ—á–µ–∫ –¥–ª—è –µ–∂–µ–¥–Ω–µ–≤–Ω—ã—Ö –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π...');
        const db = readDb();

        for (const userId in db) {
            const user = db[userId];
            const cardsToReview = user.cards.filter(c => new Date(c.nextReviewDate) <= new Date());

            if (cardsToReview.length > 0) {
                bot.sendMessage(userId, `üëã –ü—Ä–∏–≤–µ—Ç! –£ —Ç–µ–±—è –µ—Å—Ç—å ${cardsToReview.length} –∫–∞—Ä—Ç–æ—á–µ–∫ –¥–ª—è –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏—è. –ù–∞–∂–º–∏ "üß† –ò–∑—É—á–∞—Ç—å –∫–∞—Ä—Ç–æ—á–∫–∏", —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å!`)
                    .catch(err => console.error(`–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${userId}:`, err.message));
            }
        }
    }, {
        timezone: "Europe/Moscow"
    });
};

module.exports = { startScheduler };