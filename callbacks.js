// –í–Ω—É—Ç—Ä–∏ —Ñ–∞–π–ª–∞ callbacks.js

const flipCard = (callbackQuery) => {
    const { data, message, id: callbackId } = callbackQuery;
    const cardId = data.split('_')[1];
    const db = readDb();
    const user = db[message.chat.id];
    const card = user.cards.find(c => c.id === cardId);

    if (!card) return bot.answerCallbackQuery(callbackId, { text: '–ö–∞—Ä—Ç–æ—á–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!' });

    const frontText = user.settings.frontSide === 'japanese' ? card.japanese : card.russian;
    const backText = user.settings.frontSide === 'japanese' ? card.russian : card.japanese;

    // --- –ò–ó–ú–ï–ù–ï–ù–ò–ï –ù–ê–ß–ê–õ–û–°–¨ ---
    // –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –æ–±—Ä–∞—Ç–Ω–æ–π —Å—Ç–æ—Ä–æ–Ω—ã —Å —Ñ—É—Ä–∏–≥–∞–Ω–æ–π
    let backSideMessage;

    if (user.settings.frontSide === 'japanese') {
        // –ï—Å–ª–∏ –ª–∏—Ü–µ–≤–∞—è —Å—Ç–æ—Ä–æ–Ω–∞ - —è–ø–æ–Ω—Å–∫–∏–π, —Ç–æ –Ω–∞ –æ–±–æ—Ä–æ—Ç–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ñ—É—Ä–∏–≥–∞–Ω—É –∏ —Ä—É—Å—Å–∫–∏–π
        backSideMessage = `**${frontText}**\n`;
        // –î–æ–±–∞–≤–ª—è–µ–º —Ñ—É—Ä–∏–≥–∞–Ω—É, —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –æ–Ω–∞ –µ—Å—Ç—å
        if (card.furigana) {
            backSideMessage += `*${card.furigana}*\n`;
        }
        backSideMessage += `---\n**${backText}**`;
    } else {
        // –ï—Å–ª–∏ –ª–∏—Ü–µ–≤–∞—è —Å—Ç–æ—Ä–æ–Ω–∞ - —Ä—É—Å—Å–∫–∏–π, —Ç–æ –Ω–∞ –æ–±–æ—Ä–æ—Ç–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —è–ø–æ–Ω—Å–∫–∏–π –∏ —Ñ—É—Ä–∏–≥–∞–Ω—É
        backSideMessage = `**${frontText}**\n---\n**${backText}**\n`;
        if (card.furigana) {
            backSideMessage += `*${card.furigana}*\n`;
        }
    }

    backSideMessage += `\n\n*–°—Ç–∞—Ç—É—Å: ${getCardStatus(card)}*`;
    // --- –ò–ó–ú–ï–ù–ï–ù–ò–ï –ó–ê–ö–û–ù–ß–ò–õ–û–°–¨ ---

    bot.editMessageText(backSideMessage, { // –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–æ–≤—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é
        chat_id: message.chat.id,
        message_id: message.message_id,
        parse_mode: 'Markdown',
        reply_markup: {
            inline_keyboard: [
                [{ text: '‚ùå –ù–µ –ø–æ–º–Ω—é', callback_data: `rate_0_${card.id}` }, { text: 'ü§î –ü–ª–æ—Ö–æ', callback_data: `rate_3_${card.id}` }, { text: '‚úÖ –ü–æ–º–Ω—é', callback_data: `rate_4_${card.id}` }]
            ]
        }
    });
    bot.answerCallbackQuery(callbackId);
};